---
- name: (POST INSTALL) - Configure AAP
  hosts: all
  vars:
    installer_directory: /tmp/ansible-automation-platform-containerized-setup
  tasks:

    - &tower-pinger-block
      block:
        - name: check Tower status
          shell: "curl --user 'admin:{{ installer_admin_pw }}' -vkL -XGET https://localhost/api/controller/v2/ping/"
          register: check2
        - name: Display /api/v2/ping results (stdout)
          debug:
            msg: '{{ check2.stdout }}'
        # - name: Display /api/v2/ping results (stderr)
        #   debug:
        #     msg: '{{ check2.stderr }}'

    - name: change ansible tower base URL
      block:
        - &tower-baseurl-task
          ansible.builtin.uri:
            url: "https://{{ installer_fqdn_hostname }}/api/controller/v2/settings/system/"
            method: PATCH
            headers:
              Content-Type: "application/json"
            user: "admin"
            password: "{{ installer_admin_pw }}"
            force_basic_auth: yes
            body_format: json
            body:
              TOWER_URL_BASE: "https://localhost"
            validate_certs: false
          register: result
          retries: 12
          delay: 5

      rescue:
        - *tower-pinger-block

        - <<: *tower-baseurl-task
          name: Run failed task again

    - name: Cleanup
      ansible.builtin.file:
        path: /tmp/manifest.zip
        state: absent

    - name: Clean up manifest.zip.gpg
      ansible.builtin.file:
        path: /tmp/manifest.zip.gpg
        state: absent
      become: true

    - name: Cleanup inventory file
      ansible.builtin.file:
        path: "{{ installer_directory }}/inventory.custom"
        state: absent

    - name: Copy installer directory to /root
      ansible.builtin.copy:
        src: "{{ installer_directory }}"
        dest: /root/
        remote_src: true
      become: true

    - name: Remove original installer directory from /tmp
      ansible.builtin.file:
        path: "{{ installer_directory }}"
        state: absent
      become: true

    - name: Clean up installer tarball
      ansible.builtin.file:
        path: "{{ installer_directory }}.tar.gz"
        state: absent
      become: true