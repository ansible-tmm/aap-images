---
- name: (PRE INSTALL) - Configure RHEL VM for AAP containerized install
  hosts: all
  vars:
    local_installer_path: "/workspaces/aap-images/images/aap/installers/ansible-automation-platform-containerized-setup-2.5-1.tar.gz"
    remote_installer_path: "/tmp/ansible-automation-platform-installer.tar.gz"

  tasks:

    - name: Set the system hostname for the AAP installer
      become: true
      ansible.builtin.command: hostnamectl set-hostname {{ installer_fqdn_hostname }}

    - name: Add entry to /etc/hosts for {{ installer_fqdn_hostname }}
      ansible.builtin.lineinfile:
        path: /etc/hosts
        line: "127.0.0.1 {{ installer_fqdn_hostname }}"
        state: present
        create: true
        backup: true
      become: true

    - name: Install ansible-core, wget, git, and rsync
      ansible.builtin.yum:
        name:
          - ansible-core
          - wget
          - git
          - rsync
        state: present
      become: true

    - name: Copy Ansible Automation Platform installer to AAP VM
      ansible.builtin.copy:
        src: "{{ local_installer_path }}"
        dest: "{{ remote_installer_path }}"
    
    - name: Extract the installer
      ansible.builtin.unarchive:
        src: "{{ remote_installer_path }}"
        dest: "/tmp/"
        remote_src: true

    - name: Generate AAP installer inventory file
      ansible.builtin.template:
        src: templates/inventory.j2
        dest: /tmp/ansible-automation-platform-containerized-setup-2.5-1/inventory.custom

    - name: Copy manifest.zip.gpg to AAP VM
      ansible.builtin.copy:
        src: /workspaces/aap-images/images/aap/files/manifest.zip.gpg
        dest: /tmp/manifest.zip.gpg

    - name: Create manifest.zip
      ansible.builtin.command: gpg --quiet --batch --yes --decrypt --passphrase='{{ GPG_PASSPHRASE }}' --output /tmp/manifest.zip /tmp/manifest.zip.gpg

    - name: Create a postinstall directory
      ansible.builtin.file:
        path: /tmp/config
        state: directory
        mode: '0755'